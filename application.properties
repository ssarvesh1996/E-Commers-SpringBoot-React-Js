#spring.datasource.url=jdbc:mysql://localhost:3306/springdb
#spring.datasource.username=root
#spring.datasource.password=12345678
#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#server.port=6060



#=================================

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "dojsb" as database name and 
# "root" as username and password.
spring.jpa.database=mysql
spring.datasource.url=jdbc:mysql://localhost:3306/springdb?createDatabaseIfNotExist=true

#spring.datasource.url=jdbc:mysql://localhost:3306/springdb
spring.datasource.username=root
spring.datasource.password=root


# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle= true
spring.datasource.validationQuery = SELECT 1


# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update


spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
server.port=9090

spring.jpa.open-in-view=false
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl



# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy



# Show or not log for each sql query
spring.jpa.show-sql = true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialec
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.dialect.storage_engine=innodb
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true


# Initialize a database using Spring JDBC
#spring.datasource.continueOnError=true
#spring.batch.initializer.enabled=true
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql




//Lambook Dependency 

                   <dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.32</version>
			<scope>provided</scope>
			<optional>true</optional>
		</dependency>


















